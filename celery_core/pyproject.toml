[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pixcrawler-celery-core"
version = "0.1.0"
description = "Shared Celery core package for PixCrawler distributed task processing"
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "PixCrawler Team", email = "team@pixcrawler.com" }
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Distributed Computing",
]
keywords = ["celery", "distributed", "tasks", "async", "queue"]
requires-python = ">=3.11"

dependencies = [
  "celery>=5.3.0",
  "redis>=5.0.0",
  "pydantic>=2.0.0",
  "pydantic-settings>=2.0.0",
  "pixcrawler-logging",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-mock>=3.12.0",
  "ruff>=0.1.0",
  "mypy>=1.5.0",
]

monitoring = [
  "flower>=2.0.0",
  "prometheus-client>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/pixcrawler/pixcrawler"
Repository = "https://github.com/pixcrawler/pixcrawler"
Documentation = "https://pixcrawler.readthedocs.io"
Issues = "https://github.com/pixcrawler/pixcrawler/issues"

[tool.hatch.build.targets.wheel]
packages = ["celery_core"]

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long, handled by formatter
  "B008", # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["celery_core", "logging_config"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
  "celery.*",
  "redis.*",
]
ignore_missing_imports = true